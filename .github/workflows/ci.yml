name: MLOps Pipeline CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-suite:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m pytest tests/ -v --cov=src --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  train-and-quantize:
    name: Train and Quantize
    runs-on: ubuntu-latest
    needs: test-suite

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train model
        run: |
          python src/train.py

      - name: Quantize model
        run: |
          python src/quantize.py

      - name: List model files
        run: |
          ls -la models/

      - name: Upload model artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: |
            models/
          retention-days: 7

  build-and-test-container:
    name: Build and Test Container
    runs-on: ubuntu-latest
    needs: train-and-quantize

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download model artifacts
        uses: actions/download-artifact@v4
        with:
          name: model-artifacts
          path: models/

      - name: Verify model files
        run: |
          echo "Checking model files:"
          ls -la models/
          echo "Model file exists:"
          test -f models/linear_regression_model.joblib && echo "✅ Model file found" || echo "❌ Model file missing"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t mlops-pipeline .

      - name: Test container prediction
        run: |
          docker run --rm mlops-pipeline python src/predict.py

      - name: Verify model performance
        run: |
          # Run prediction and capture output
          output=$(docker run --rm mlops-pipeline python src/predict.py 2>&1)
          echo "$output"

          # Check if R² score meets threshold
          if echo "$output" | grep -q "✅ Model meets minimum R² threshold"; then
            echo "✅ Model performance verification passed"
          else
            echo "❌ Model performance verification failed"
            exit 1
          fi
